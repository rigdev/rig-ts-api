// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file model/credentials.proto (package model, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Generic credentials model.
 *
 * @generated from message model.ProviderCredentials
 */
export class ProviderCredentials extends Message<ProviderCredentials> {
  /**
   * Public key. 
   *
   * @generated from field: string public_key = 1;
   */
  publicKey = "";

  /**
   * Private key.
   *
   * @generated from field: string private_key = 2;
   */
  privateKey = "";

  constructor(data?: PartialMessage<ProviderCredentials>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "model.ProviderCredentials";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "public_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "private_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProviderCredentials {
    return new ProviderCredentials().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProviderCredentials {
    return new ProviderCredentials().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProviderCredentials {
    return new ProviderCredentials().fromJsonString(jsonString, options);
  }

  static equals(a: ProviderCredentials | PlainMessage<ProviderCredentials> | undefined, b: ProviderCredentials | PlainMessage<ProviderCredentials> | undefined): boolean {
    return proto3.util.equals(ProviderCredentials, a, b);
  }
}

