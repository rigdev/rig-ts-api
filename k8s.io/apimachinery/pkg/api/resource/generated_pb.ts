// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file k8s.io/apimachinery/pkg/api/resource/generated.proto (package k8s.io.apimachinery.pkg.api.resource, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message k8s.io.apimachinery.pkg.api.resource.Quantity
 */
export class Quantity extends Message<Quantity> {
  /**
   * @generated from field: string string = 1;
   */
  string = "";

  constructor(data?: PartialMessage<Quantity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "k8s.io.apimachinery.pkg.api.resource.Quantity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Quantity {
    return new Quantity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Quantity {
    return new Quantity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Quantity {
    return new Quantity().fromJsonString(jsonString, options);
  }

  static equals(a: Quantity | PlainMessage<Quantity> | undefined, b: Quantity | PlainMessage<Quantity> | undefined): boolean {
    return proto3.util.equals(Quantity, a, b);
  }
}

