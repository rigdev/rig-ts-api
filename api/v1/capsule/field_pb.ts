// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file api/v1/capsule/field.proto (package api.v1.capsule, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum api.v1.capsule.FieldOperation
 */
export enum FieldOperation {
  /**
   * @generated from enum value: FIELD_OPERATION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FIELD_OPERATION_ADDED = 1;
   */
  ADDED = 1,

  /**
   * @generated from enum value: FIELD_OPERATION_REMOVED = 2;
   */
  REMOVED = 2,

  /**
   * @generated from enum value: FIELD_OPERATION_MODIFIED = 3;
   */
  MODIFIED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(FieldOperation)
proto3.util.setEnumType(FieldOperation, "api.v1.capsule.FieldOperation", [
  { no: 0, name: "FIELD_OPERATION_UNSPECIFIED" },
  { no: 1, name: "FIELD_OPERATION_ADDED" },
  { no: 2, name: "FIELD_OPERATION_REMOVED" },
  { no: 3, name: "FIELD_OPERATION_MODIFIED" },
]);

/**
 * @generated from message api.v1.capsule.FieldChange
 */
export class FieldChange extends Message<FieldChange> {
  /**
   * The Field-ID associated with this change. This is formated as a
   * json-path string with '?' placeholders.
   *
   * @generated from field: string field_id = 1;
   */
  fieldId = "";

  /**
   * The unique Field-path identifying this change. This is formated as a
   * json-path string.
   *
   * @generated from field: string field_path = 2;
   */
  fieldPath = "";

  /**
   * YAML encoding of the old value (if any).
   *
   * @generated from field: string old_value_yaml = 3;
   */
  oldValueYaml = "";

  /**
   * YAML encoding of the new value (if any).
   *
   * @generated from field: string new_value_yaml = 4;
   */
  newValueYaml = "";

  /**
   * Operation is how this field-change is applied against the source to get
   * to the target spec.
   *
   * @generated from field: api.v1.capsule.FieldOperation operation = 5;
   */
  operation = FieldOperation.UNSPECIFIED;

  /**
   * Pretty-printed string description of the field change.
   *
   * @generated from field: string description = 6;
   */
  description = "";

  constructor(data?: PartialMessage<FieldChange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.capsule.FieldChange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "field_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "field_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "old_value_yaml", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "new_value_yaml", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "operation", kind: "enum", T: proto3.getEnumType(FieldOperation) },
    { no: 6, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FieldChange {
    return new FieldChange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FieldChange {
    return new FieldChange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FieldChange {
    return new FieldChange().fromJsonString(jsonString, options);
  }

  static equals(a: FieldChange | PlainMessage<FieldChange> | undefined, b: FieldChange | PlainMessage<FieldChange> | undefined): boolean {
    return proto3.util.equals(FieldChange, a, b);
  }
}

