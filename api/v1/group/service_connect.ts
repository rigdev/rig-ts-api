// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=ts"
// @generated from file api/v1/group/service.proto (package api.v1.group, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AddMemberRequest, AddMemberResponse, CreateRequest, CreateResponse, DeleteRequest, DeleteResponse, GetRequest, GetResponse, ListGroupsForMemberRequest, ListGroupsForMemberResponse, ListMembersRequest, ListMembersResponse, ListRequest, ListResponse, RemoveMemberRequest, RemoveMemberResponse, UpdateRequest, UpdateResponse } from "./service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * The service to manage groups in Users
 *
 * @generated from service api.v1.group.Service
 */
export const Service = {
  typeName: "api.v1.group.Service",
  methods: {
    /**
     * Create a new group
     *
     * @generated from rpc api.v1.group.Service.Create
     */
    create: {
      name: "Create",
      I: CreateRequest,
      O: CreateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete group
     *
     * @generated from rpc api.v1.group.Service.Delete
     */
    delete: {
      name: "Delete",
      I: DeleteRequest,
      O: DeleteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List groups
     *
     * @generated from rpc api.v1.group.Service.List
     */
    list: {
      name: "List",
      I: ListRequest,
      O: ListResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update group
     *
     * @generated from rpc api.v1.group.Service.Update
     */
    update: {
      name: "Update",
      I: UpdateRequest,
      O: UpdateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get group
     *
     * @generated from rpc api.v1.group.Service.Get
     */
    get: {
      name: "Get",
      I: GetRequest,
      O: GetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a member to a group
     *
     * @generated from rpc api.v1.group.Service.AddMember
     */
    addMember: {
      name: "AddMember",
      I: AddMemberRequest,
      O: AddMemberResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Remove member from Group
     *
     * @generated from rpc api.v1.group.Service.RemoveMember
     */
    removeMember: {
      name: "RemoveMember",
      I: RemoveMemberRequest,
      O: RemoveMemberResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get Group Members
     *
     * @generated from rpc api.v1.group.Service.ListMembers
     */
    listMembers: {
      name: "ListMembers",
      I: ListMembersRequest,
      O: ListMembersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get Groups
     *
     * @generated from rpc api.v1.group.Service.ListGroupsForMember
     */
    listGroupsForMember: {
      name: "ListGroupsForMember",
      I: ListGroupsForMemberRequest,
      O: ListGroupsForMemberResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

