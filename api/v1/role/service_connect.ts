// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=ts"
// @generated from file api/v1/role/service.proto (package api.v1.role, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AssignRequest, AssignResponse, CreateRequest, CreateResponse, DeleteRequest, DeleteResponse, GetRequest, GetResponse, ListAssigneesRequest, ListAssigneesResponse, ListForEntityRequest, ListForEntityResponse, ListRequest, ListResponse, RevokeRequest, RevokeResponse, UpdateRequest, UpdateResponse } from "./service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Service to manage roles that controls the RBAC.
 *
 * @generated from service api.v1.role.Service
 */
export const Service = {
  typeName: "api.v1.role.Service",
  methods: {
    /**
     * Create a new role.
     *
     * @generated from rpc api.v1.role.Service.Create
     */
    create: {
      name: "Create",
      I: CreateRequest,
      O: CreateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete role.
     *
     * @generated from rpc api.v1.role.Service.Delete
     */
    delete: {
      name: "Delete",
      I: DeleteRequest,
      O: DeleteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List roles.
     *
     * @generated from rpc api.v1.role.Service.List
     */
    list: {
      name: "List",
      I: ListRequest,
      O: ListResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update role
     *
     * @generated from rpc api.v1.role.Service.Update
     */
    update: {
      name: "Update",
      I: UpdateRequest,
      O: UpdateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get role.
     *
     * @generated from rpc api.v1.role.Service.Get
     */
    get: {
      name: "Get",
      I: GetRequest,
      O: GetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Assign a role.
     *
     * @generated from rpc api.v1.role.Service.Assign
     */
    assign: {
      name: "Assign",
      I: AssignRequest,
      O: AssignResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Revoke a role.
     *
     * @generated from rpc api.v1.role.Service.Revoke
     */
    revoke: {
      name: "Revoke",
      I: RevokeRequest,
      O: RevokeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List roles for an entity.
     *
     * @generated from rpc api.v1.role.Service.ListForEntity
     */
    listForEntity: {
      name: "ListForEntity",
      I: ListForEntityRequest,
      O: ListForEntityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List Assignees.
     *
     * @generated from rpc api.v1.role.Service.ListAssignees
     */
    listAssignees: {
      name: "ListAssignees",
      I: ListAssigneesRequest,
      O: ListAssigneesResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

