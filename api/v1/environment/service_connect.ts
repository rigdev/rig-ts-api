// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=ts"
// @generated from file api/v1/environment/service.proto (package api.v1.environment, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateRequest, CreateResponse, DeleteRequest, DeleteResponse, GetNamespacesRequest, GetNamespacesResponse, GetRequest, GetResponse, ListRequest, ListResponse, UpdateRequest, UpdateResponse } from "./service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service api.v1.environment.Service
 */
export const Service = {
  typeName: "api.v1.environment.Service",
  methods: {
    /**
     * @generated from rpc api.v1.environment.Service.Create
     */
    create: {
      name: "Create",
      I: CreateRequest,
      O: CreateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.environment.Service.Update
     */
    update: {
      name: "Update",
      I: UpdateRequest,
      O: UpdateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.environment.Service.Delete
     */
    delete: {
      name: "Delete",
      I: DeleteRequest,
      O: DeleteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List available environments.
     *
     * @generated from rpc api.v1.environment.Service.List
     */
    list: {
      name: "List",
      I: ListRequest,
      O: ListResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.environment.Service.GetNamespaces
     */
    getNamespaces: {
      name: "GetNamespaces",
      I: GetNamespacesRequest,
      O: GetNamespacesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.environment.Service.Get
     */
    get: {
      name: "Get",
      I: GetRequest,
      O: GetResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

