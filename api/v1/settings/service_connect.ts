// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=ts"
// @generated from file api/v1/settings/service.proto (package api.v1.settings, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetConfigurationRequest, GetConfigurationResponse, GetLicenseInfoRequest, GetLicenseInfoResponse, GetSettingsRequest, GetSettingsResponse, UpdateSettingsRequest, UpdateSettingsResponse } from "./service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Service for setting and retrieving platform-wide settings.
 *
 * @generated from service api.v1.settings.Service
 */
export const Service = {
  typeName: "api.v1.settings.Service",
  methods: {
    /**
     * @generated from rpc api.v1.settings.Service.GetConfiguration
     */
    getConfiguration: {
      name: "GetConfiguration",
      I: GetConfigurationRequest,
      O: GetConfigurationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.settings.Service.GetSettings
     */
    getSettings: {
      name: "GetSettings",
      I: GetSettingsRequest,
      O: GetSettingsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.settings.Service.UpdateSettings
     */
    updateSettings: {
      name: "UpdateSettings",
      I: UpdateSettingsRequest,
      O: UpdateSettingsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.settings.Service.GetLicenseInfo
     */
    getLicenseInfo: {
      name: "GetLicenseInfo",
      I: GetLicenseInfoRequest,
      O: GetLicenseInfoResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

