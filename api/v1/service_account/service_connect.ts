// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=ts"
// @generated from file api/v1/service_account/service.proto (package api.v1.service_account, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateRequest, CreateResponse, DeleteRequest, DeleteResponse, ListRequest, ListResponse } from "./service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * The service to manage your project Service Accounts
 *
 * @generated from service api.v1.service_account.Service
 */
export const Service = {
  typeName: "api.v1.service_account.Service",
  methods: {
    /**
     * Create a new Service Account. The returned client_id and client_secret can
     * be used as login credentials. Note that the client_secret can only be read
     * out once, at creation.
     *
     * @generated from rpc api.v1.service_account.Service.Create
     */
    create: {
      name: "Create",
      I: CreateRequest,
      O: CreateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all service accounts for the current project.
     *
     * @generated from rpc api.v1.service_account.Service.List
     */
    list: {
      name: "List",
      I: ListRequest,
      O: ListResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a service account. It can take up to the TTL of access tokens for
     * existing sessions using this service_account, to expire.
     *
     * @generated from rpc api.v1.service_account.Service.Delete
     */
    delete: {
      name: "Delete",
      I: DeleteRequest,
      O: DeleteResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

