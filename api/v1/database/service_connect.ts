// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=ts"
// @generated from file api/v1/database/service.proto (package api.v1.database, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateCredentialRequest, CreateCredentialResponse, CreateRequest, CreateResponse, CreateTableRequest, CreateTableResponse, DeleteCredentialRequest, DeleteCredentialResponse, DeleteRequest, DeleteResponse, DeleteTableRequest, DeleteTableResponse, GetByNameRequest, GetByNameResponse, GetEndpointRequest, GetEndpointResponse, GetRequest, GetResponse, ListRequest, ListResponse, ListTablesRequest, ListTablesResponse, UpdateRequest, UpdateResponse } from "./service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * The service to manage databases.
 *
 * @generated from service api.v1.database.Service
 */
export const Service = {
  typeName: "api.v1.database.Service",
  methods: {
    /**
     * @generated from rpc api.v1.database.Service.CreateCredential
     */
    createCredential: {
      name: "CreateCredential",
      I: CreateCredentialRequest,
      O: CreateCredentialResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.database.Service.DeleteCredential
     */
    deleteCredential: {
      name: "DeleteCredential",
      I: DeleteCredentialRequest,
      O: DeleteCredentialResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.database.Service.Create
     */
    create: {
      name: "Create",
      I: CreateRequest,
      O: CreateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.database.Service.Get
     */
    get: {
      name: "Get",
      I: GetRequest,
      O: GetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.database.Service.Update
     */
    update: {
      name: "Update",
      I: UpdateRequest,
      O: UpdateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.database.Service.Delete
     */
    delete: {
      name: "Delete",
      I: DeleteRequest,
      O: DeleteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.database.Service.GetByName
     */
    getByName: {
      name: "GetByName",
      I: GetByNameRequest,
      O: GetByNameResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.database.Service.List
     */
    list: {
      name: "List",
      I: ListRequest,
      O: ListResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.database.Service.GetEndpoint
     */
    getEndpoint: {
      name: "GetEndpoint",
      I: GetEndpointRequest,
      O: GetEndpointResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.database.Service.CreateTable
     */
    createTable: {
      name: "CreateTable",
      I: CreateTableRequest,
      O: CreateTableResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.database.Service.DeleteTable
     */
    deleteTable: {
      name: "DeleteTable",
      I: DeleteTableRequest,
      O: DeleteTableResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1.database.Service.ListTables
     */
    listTables: {
      name: "ListTables",
      I: ListTablesRequest,
      O: ListTablesResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

